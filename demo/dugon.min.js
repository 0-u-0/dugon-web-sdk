/**
 * Dugon Web SDK v0.0.1-alpha
 * @author: CC <craterone11@gmail.com> (https://crater.one)
 * @license: MIT
 * @repository: https://github.com/0-u-0/dugon-web-sdk.git
 * @date: Mon Sep 09 2024 16:10:31 GMT+0800 (China Standard Time)
 **/
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).Dugon=t()}(this,(function(){"use strict";function e(e,t){if(!function(e){return"string"==typeof e}(e))throw TypeError(t+" must be string.")}function t(e){for(let t of e.media)if(t.fingerprint){return{setup:"active",fingerprint:{algorithm:t.fingerprint.type,value:t.fingerprint.hash}}}return null}class s{constructor(e,t){this.resolve=t=>{e(t)},this.reject=e=>{t(e)}}}class i{constructor(e,t){this.url=e,this.params=t,this.messages=new Map,this.ws=null}getFullURL(){let e=new URL(this.url),t=btoa(JSON.stringify(this.params));return e.searchParams.set("params",t),e.toString()}init(){this.ws=new WebSocket(this.getFullURL()),this.ws.onmessage=e=>{let t=JSON.parse(e.data),{id:s,method:i,params:r}=t;if("response"===i){let e=this.messages.get(s);e&&e.resolve(r)}else if("notification"===i){let{event:e,data:t}=r;this.onnotification&&this.onnotification(e,t)}},this.ws.onclose=()=>{this.onclose&&this.onclose()};return new Promise((e,t)=>{this.ws&&(this.ws.onopen=t=>{e()})})}async request(e){const t=function(e){let t=0;for(;t<.1;)t=Math.random();return Math.ceil(t*Math.pow(10,e))}(8);this.sendJSON({method:"request",id:t,params:e});return new Promise((e,i)=>{const r=new s(e,i);this.messages.set(t,r)})}sendJSON(e){try{let t=JSON.stringify(e);this.ws&&this.ws.send(t)}catch(e){}}}class r{constructor(){this.running=!1,this.queue=new Array}push(e){this.running?this.queue.push(e):(this.running=!0,this.executeTask(e))}executeTask(e){const{execObj:t,taskFunc:s,parameters:i}=e;s.call(t,...i).then(()=>{const e=this.queue.shift();e?this.executeTask(e):this.running=!1})}}class n{constructor(e,t,s,i){this.id=e,this.remoteICECandidates=t,this.remoteICEParameters=s,this.remoteDTLSParameters=i}}class a{constructor(e,t,s){this.track=e,this.transceiver=t,this.metadata=s,this.id="",this.media=null}changeTrackState(e){this.track.enabled=e}get kind(){return this.track.kind}get mid(){return this.transceiver.mid}get available(){return!("inactive"===this.transceiver.direction)}}class o{constructor(e,t,s,i,r,n,a,o,c,d=!1,u,h,p,l,m,f){this.kind=e,this.payload=t,this.codecName=s,this.codecFullName=i,this.clockRate=r,this.channels=n,this.mid=a,this.ssrc=o,this.cname=c,this.dtx=d,this.reducedSize=u,this.senderPaused=h,this.rtx=p,this.extensions=l,this.parameters=m,this.rtcpFeedback=f}}class c{constructor(e,t,s,i,r,n,a,o=1,c,d,u,h,p){this.type=e,this.direction=t,this.codecName=s,this.payload=i,this.rate=r,this.mid=n,this.cname=a,this.channels=o,this.parameters=c,this.ssrc=d,this.rtcpFb=u,this.extension=h,this.rtx=p,this.role=null,this.port=7,this.setup="actpass",this.connection="IN IP4 127.0.0.1",this.protocol="UDP/TLS/RTP/SAVPF",this.iceUfrag="",this.icePwd="",this.iceOptions="",this.reducedSize=!0,this.candidates=Array(),this.msidAppdata=""}get available(){return"inactive"!=this.direction}toCodec(){return new o(this.type,this.payload,this.codecName,this.codecName,this.rate,this.channels,this.mid,this.ssrc,this.cname,!1,!0,!1,this.rtx,this.extension,this.parameters,this.rtcpFb)}static merge(e,t,s,i){let r,n,a,o,d,u="",h=0,p=0,l=null,m=Array(),f=Array(),g=[];d="inactive"===e.direction?"inactive":"recvonly";for(let e in t.parameters)g.push(`${e}=${t.parameters[e]}`);if("H264"==t.codecName.slice(0,4)){r="H264";for(let t of e.fmtp){let e=!0;for(let s of g)t.config.includes(s)||(e=!1);e&&(h=t.payload,a=t.config),t.config=="apt="+h&&(l={payload:t.payload})}for(let t of e.rtp)t.payload==h&&(t.rate&&(p=t.rate),n=t.encoding)}else{r=t.codecName;for(let t of e.rtp)t.codec==r&&(h=t.payload,t.rate&&(p=t.rate),n=t.encoding);for(let t of e.fmtp)t.payload==h&&(a=t.config),t.config=="apt="+h&&(l={payload:t.payload})}if(e.rtcpFb)for(let s of e.rtcpFb)if(s.payload==h&&"goog-remb"!=s.type){let e=s.subtype?s.subtype:"";for(let i of t.rtcpFeedback)if(i.type==s.type&&i.parameter==e){m.push({type:s.type,parameter:e});break}}let b=t.extensions.filter(e=>e.recv);if(e.ext)for(let t of e.ext)for(let e of b)if(t.uri==e.uri){let e={id:t.value,uri:t.uri};f.push(e);break}if(e.ssrcs){for(let t of e.ssrcs)if("cname"==t.attribute){t.value&&(u=t.value);break}if(o=e.ssrcs[0].id,e.ssrcGroups)for(let t of e.ssrcGroups)if("FID"==t.semantics){l&&(l.ssrc=parseInt(t.ssrcs.split(" ")[1]));break}}let y={};if(a){let e=a.split(";");for(let t of e){let e=t.split("="),s=e[0],i=e[1];y[s]=i}}let v=new c(e.type,d,r,h,p,e.mid,u,n,y,o,m,f,l);return v.iceUfrag=s.usernameFragment,v.icePwd=s.password,v.candidates=i,v.role="recv",v.setup="passive",v}toSdp(){let e=[],t=0;(this.available||"0"==this.mid)&&(t=7);let s=`m=${this.type} ${t} ${this.protocol} ${this.payload}`;this.rtx&&(s=s+" "+this.rtx.payload),e.push(s),e.push("c=IN IP4 127.0.0.1"),1==this.channels?e.push(`a=rtpmap:${this.payload} ${this.codecName}/${this.rate}`):e.push(`a=rtpmap:${this.payload} ${this.codecName}/${this.rate}/${this.channels}`),this.rtx&&e.push(`a=rtpmap:${this.rtx.payload} rtx/${this.rate}`),Object.keys(this.parameters).length>0&&e.push(`a=fmtp:${this.payload} ${function(e){let t=[];for(let s in e)t.push(`${s}=${e[s]}`);return t.join(";")}(this.parameters)}`),this.rtx&&e.push(`a=fmtp:${this.rtx.payload} apt=${this.payload}`);for(let t of this.rtcpFb){let s=`${t.type} ${t.parameter}`.trim();e.push(`a=rtcp-fb:${this.payload} ${s}`)}if(this.available)for(let t of this.extension)e.push(`a=extmap:${t.id} ${t.uri}`);if(e.push("a=setup:"+this.setup),e.push("a=mid:"+this.mid),"send"===this.role&&e.push(`a=msid:${this.cname} ${this.msidAppdata}`),e.push("a="+this.direction),e.push("a=ice-ufrag:"+this.iceUfrag),e.push("a=ice-pwd:"+this.icePwd),this.candidates.length>0){for(let t of this.candidates)e.push(`a=candidate:${t.foundation} ${t.component} ${t.transport} ${t.priority} ${t.ip} ${t.port} typ ${t.type}`);e.push("a=end-of-candidates")}return"send"===this.role&&(this.rtx&&e.push(`a=ssrc-group:FID ${this.ssrc} ${this.rtx.ssrc}`),e.push(`a=ssrc:${this.ssrc} cname:${this.cname}`),this.rtx&&e.push(`a=ssrc:${this.rtx.ssrc} cname:${this.cname}`)),e.push("a=ice-options:renomination"),e.push("a=rtcp-mux"),e.push("a=rtcp-rsize"),e.join("\r\n")}static create(e,t,s,i,r){let n=new c(t.kind,"inactive",t.codecName,t.payload,t.clockRate,e,t.cname,t.channels,t.parameters,t.ssrc,t.rtcpFeedback,t.extensions,t.rtx);return n.role="send",n.setup="actpass",n.direction="inactive",n.iceUfrag=s.usernameFragment,n.icePwd=s.password,n.iceOptions="",n.candidates=i,n.msidAppdata=r,n}}function d(e,t){return e(t={exports:{}},t.exports),t.exports}var u=d((function(e){var t=e.exports={v:[{name:"version",reg:/^(\d*)$/}],o:[{name:"origin",reg:/^(\S*) (\d*) (\d*) (\S*) IP(\d) (\S*)/,names:["username","sessionId","sessionVersion","netType","ipVer","address"],format:"%s %s %d %s IP%d %s"}],s:[{name:"name"}],i:[{name:"description"}],u:[{name:"uri"}],e:[{name:"email"}],p:[{name:"phone"}],z:[{name:"timezones"}],r:[{name:"repeats"}],t:[{name:"timing",reg:/^(\d*) (\d*)/,names:["start","stop"],format:"%d %d"}],c:[{name:"connection",reg:/^IN IP(\d) (\S*)/,names:["version","ip"],format:"IN IP%d %s"}],b:[{push:"bandwidth",reg:/^(TIAS|AS|CT|RR|RS):(\d*)/,names:["type","limit"],format:"%s:%s"}],m:[{reg:/^(\w*) (\d*) ([\w/]*)(?: (.*))?/,names:["type","port","protocol","payloads"],format:"%s %d %s %s"}],a:[{push:"rtp",reg:/^rtpmap:(\d*) ([\w\-.]*)(?:\s*\/(\d*)(?:\s*\/(\S*))?)?/,names:["payload","codec","rate","encoding"],format:function(e){return e.encoding?"rtpmap:%d %s/%s/%s":e.rate?"rtpmap:%d %s/%s":"rtpmap:%d %s"}},{push:"fmtp",reg:/^fmtp:(\d*) ([\S| ]*)/,names:["payload","config"],format:"fmtp:%d %s"},{name:"control",reg:/^control:(.*)/,format:"control:%s"},{name:"rtcp",reg:/^rtcp:(\d*)(?: (\S*) IP(\d) (\S*))?/,names:["port","netType","ipVer","address"],format:function(e){return null!=e.address?"rtcp:%d %s IP%d %s":"rtcp:%d"}},{push:"rtcpFbTrrInt",reg:/^rtcp-fb:(\*|\d*) trr-int (\d*)/,names:["payload","value"],format:"rtcp-fb:%s trr-int %d"},{push:"rtcpFb",reg:/^rtcp-fb:(\*|\d*) ([\w-_]*)(?: ([\w-_]*))?/,names:["payload","type","subtype"],format:function(e){return null!=e.subtype?"rtcp-fb:%s %s %s":"rtcp-fb:%s %s"}},{push:"ext",reg:/^extmap:(\d+)(?:\/(\w+))?(?: (urn:ietf:params:rtp-hdrext:encrypt))? (\S*)(?: (\S*))?/,names:["value","direction","encrypt-uri","uri","config"],format:function(e){return"extmap:%d"+(e.direction?"/%s":"%v")+(e["encrypt-uri"]?" %s":"%v")+" %s"+(e.config?" %s":"")}},{name:"extmapAllowMixed",reg:/^(extmap-allow-mixed)/},{push:"crypto",reg:/^crypto:(\d*) ([\w_]*) (\S*)(?: (\S*))?/,names:["id","suite","config","sessionConfig"],format:function(e){return null!=e.sessionConfig?"crypto:%d %s %s %s":"crypto:%d %s %s"}},{name:"setup",reg:/^setup:(\w*)/,format:"setup:%s"},{name:"connectionType",reg:/^connection:(new|existing)/,format:"connection:%s"},{name:"mid",reg:/^mid:([^\s]*)/,format:"mid:%s"},{name:"msid",reg:/^msid:(.*)/,format:"msid:%s"},{name:"ptime",reg:/^ptime:(\d*(?:\.\d*)*)/,format:"ptime:%d"},{name:"maxptime",reg:/^maxptime:(\d*(?:\.\d*)*)/,format:"maxptime:%d"},{name:"direction",reg:/^(sendrecv|recvonly|sendonly|inactive)/},{name:"icelite",reg:/^(ice-lite)/},{name:"iceUfrag",reg:/^ice-ufrag:(\S*)/,format:"ice-ufrag:%s"},{name:"icePwd",reg:/^ice-pwd:(\S*)/,format:"ice-pwd:%s"},{name:"fingerprint",reg:/^fingerprint:(\S*) (\S*)/,names:["type","hash"],format:"fingerprint:%s %s"},{push:"candidates",reg:/^candidate:(\S*) (\d*) (\S*) (\d*) (\S*) (\d*) typ (\S*)(?: raddr (\S*) rport (\d*))?(?: tcptype (\S*))?(?: generation (\d*))?(?: network-id (\d*))?(?: network-cost (\d*))?/,names:["foundation","component","transport","priority","ip","port","type","raddr","rport","tcptype","generation","network-id","network-cost"],format:function(e){var t="candidate:%s %d %s %d %s %d typ %s";return t+=null!=e.raddr?" raddr %s rport %d":"%v%v",t+=null!=e.tcptype?" tcptype %s":"%v",null!=e.generation&&(t+=" generation %d"),t+=null!=e["network-id"]?" network-id %d":"%v",t+=null!=e["network-cost"]?" network-cost %d":"%v"}},{name:"endOfCandidates",reg:/^(end-of-candidates)/},{name:"remoteCandidates",reg:/^remote-candidates:(.*)/,format:"remote-candidates:%s"},{name:"iceOptions",reg:/^ice-options:(\S*)/,format:"ice-options:%s"},{push:"ssrcs",reg:/^ssrc:(\d*) ([\w_-]*)(?::(.*))?/,names:["id","attribute","value"],format:function(e){var t="ssrc:%d";return null!=e.attribute&&(t+=" %s",null!=e.value&&(t+=":%s")),t}},{push:"ssrcGroups",reg:/^ssrc-group:([\x21\x23\x24\x25\x26\x27\x2A\x2B\x2D\x2E\w]*) (.*)/,names:["semantics","ssrcs"],format:"ssrc-group:%s %s"},{name:"msidSemantic",reg:/^msid-semantic:\s?(\w*) (\S*)/,names:["semantic","token"],format:"msid-semantic: %s %s"},{push:"groups",reg:/^group:(\w*) (.*)/,names:["type","mids"],format:"group:%s %s"},{name:"rtcpMux",reg:/^(rtcp-mux)/},{name:"rtcpRsize",reg:/^(rtcp-rsize)/},{name:"sctpmap",reg:/^sctpmap:([\w_/]*) (\S*)(?: (\S*))?/,names:["sctpmapNumber","app","maxMessageSize"],format:function(e){return null!=e.maxMessageSize?"sctpmap:%s %s %s":"sctpmap:%s %s"}},{name:"xGoogleFlag",reg:/^x-google-flag:([^\s]*)/,format:"x-google-flag:%s"},{push:"rids",reg:/^rid:([\d\w]+) (\w+)(?: ([\S| ]*))?/,names:["id","direction","params"],format:function(e){return e.params?"rid:%s %s %s":"rid:%s %s"}},{push:"imageattrs",reg:new RegExp("^imageattr:(\\d+|\\*)[\\s\\t]+(send|recv)[\\s\\t]+(\\*|\\[\\S+\\](?:[\\s\\t]+\\[\\S+\\])*)(?:[\\s\\t]+(recv|send)[\\s\\t]+(\\*|\\[\\S+\\](?:[\\s\\t]+\\[\\S+\\])*))?"),names:["pt","dir1","attrs1","dir2","attrs2"],format:function(e){return"imageattr:%s %s %s"+(e.dir2?" %s %s":"")}},{name:"simulcast",reg:new RegExp("^simulcast:(send|recv) ([a-zA-Z0-9\\-_~;,]+)(?:\\s?(send|recv) ([a-zA-Z0-9\\-_~;,]+))?$"),names:["dir1","list1","dir2","list2"],format:function(e){return"simulcast:%s %s"+(e.dir2?" %s %s":"")}},{name:"simulcast_03",reg:/^simulcast:[\s\t]+([\S+\s\t]+)$/,names:["value"],format:"simulcast: %s"},{name:"framerate",reg:/^framerate:(\d+(?:$|\.\d+))/,format:"framerate:%s"},{name:"sourceFilter",reg:/^source-filter: *(excl|incl) (\S*) (IP4|IP6|\*) (\S*) (.*)/,names:["filterMode","netType","addressTypes","destAddress","srcList"],format:"source-filter: %s %s %s %s %s"},{name:"bundleOnly",reg:/^(bundle-only)/},{name:"label",reg:/^label:(.+)/,format:"label:%s"},{name:"sctpPort",reg:/^sctp-port:(\d+)$/,format:"sctp-port:%s"},{name:"maxMessageSize",reg:/^max-message-size:(\d+)$/,format:"max-message-size:%s"},{push:"tsRefClocks",reg:/^ts-refclk:([^\s=]*)(?:=(\S*))?/,names:["clksrc","clksrcExt"],format:function(e){return"ts-refclk:%s"+(null!=e.clksrcExt?"=%s":"")}},{name:"mediaClk",reg:/^mediaclk:(?:id=(\S*))? *([^\s=]*)(?:=(\S*))?(?: *rate=(\d+)\/(\d+))?/,names:["id","mediaClockName","mediaClockValue","rateNumerator","rateDenominator"],format:function(e){var t="mediaclk:";return t+=null!=e.id?"id=%s %s":"%v%s",t+=null!=e.mediaClockValue?"=%s":"",t+=null!=e.rateNumerator?" rate=%s":"",t+=null!=e.rateDenominator?"/%s":""}},{name:"keywords",reg:/^keywds:(.+)$/,format:"keywds:%s"},{name:"content",reg:/^content:(.+)/,format:"content:%s"},{name:"bfcpFloorCtrl",reg:/^floorctrl:(c-only|s-only|c-s)/,format:"floorctrl:%s"},{name:"bfcpConfId",reg:/^confid:(\d+)/,format:"confid:%s"},{name:"bfcpUserId",reg:/^userid:(\d+)/,format:"userid:%s"},{name:"bfcpFloorId",reg:/^floorid:(.+) (?:m-stream|mstrm):(.+)/,names:["id","mStream"],format:"floorid:%s mstrm:%s"},{push:"invalid",names:["value"]}]};Object.keys(t).forEach((function(e){t[e].forEach((function(e){e.reg||(e.reg=/(.*)/),e.format||(e.format="%s")}))}))}));u.v,u.o,u.s,u.i,u.u,u.e,u.p,u.z,u.r,u.t,u.c,u.b,u.m,u.a;var h=d((function(e,t){var s=function(e){return String(Number(e))===e?Number(e):e},i=function(e,t,i){var r=e.name&&e.names;e.push&&!t[e.push]?t[e.push]=[]:r&&!t[e.name]&&(t[e.name]={});var n=e.push?{}:r?t[e.name]:t;!function(e,t,i,r){if(r&&!i)t[r]=s(e[1]);else for(var n=0;n<i.length;n+=1)null!=e[n+1]&&(t[i[n]]=s(e[n+1]))}(i.match(e.reg),n,e.names,e.name),e.push&&t[e.push].push(n)},r=RegExp.prototype.test.bind(/^([a-z])=(.*)/);t.parse=function(e){var t={},s=[],n=t;return e.split(/(\r\n|\r|\n)/).filter(r).forEach((function(e){var t=e[0],r=e.slice(2);"m"===t&&(s.push({rtp:[],fmtp:[]}),n=s[s.length-1]);for(var a=0;a<(u[t]||[]).length;a+=1){var o=u[t][a];if(o.reg.test(r))return i(o,n,r)}})),t.media=s,t};var n=function(e,t){var i=t.split(/=(.+)/,2);return 2===i.length?e[i[0]]=s(i[1]):1===i.length&&t.length>1&&(e[i[0]]=void 0),e};t.parseParams=function(e){return e.split(/;\s?/).reduce(n,{})},t.parseFmtpConfig=t.parseParams,t.parsePayloads=function(e){return e.toString().split(" ").map(Number)},t.parseRemoteCandidates=function(e){for(var t=[],i=e.split(" ").map(s),r=0;r<i.length;r+=3)t.push({component:i[r],ip:i[r+1],port:i[r+2]});return t},t.parseImageAttributes=function(e){return e.split(" ").map((function(e){return e.substring(1,e.length-1).split(",").reduce(n,{})}))},t.parseSimulcastStreamList=function(e){return e.split(";").map((function(e){return e.split(",").map((function(e){var t,i=!1;return"~"!==e[0]?t=s(e):(t=s(e.substring(1,e.length)),i=!0),{scid:t,paused:i}}))}))}}));h.parse,h.parseParams,h.parseFmtpConfig,h.parsePayloads,h.parseRemoteCandidates,h.parseImageAttributes,h.parseSimulcastStreamList;var p=/%[sdv%]/g,l=function(e){var t=1,s=arguments,i=s.length;return e.replace(p,(function(e){if(t>=i)return e;var r=s[t];switch(t+=1,e){case"%%":return"%";case"%s":return String(r);case"%d":return Number(r);case"%v":return""}}))},m=function(e,t,s){var i=[e+"="+(t.format instanceof Function?t.format(t.push?s:s[t.name]):t.format)];if(t.names)for(var r=0;r<t.names.length;r+=1){var n=t.names[r];t.name?i.push(s[t.name][n]):i.push(s[t.names[r]])}else i.push(s[t.name]);return l.apply(null,i)},f=["v","o","s","i","u","e","p","c","b","t","r","z","a"],g=["i","c","b","a"],b=function(e,t){t=t||{},null==e.version&&(e.version=0),null==e.name&&(e.name=" "),e.media.forEach((function(e){null==e.payloads&&(e.payloads="")}));var s=t.outerOrder||f,i=t.innerOrder||g,r=[];return s.forEach((function(t){u[t].forEach((function(s){s.name in e&&null!=e[s.name]?r.push(m(t,s,e)):s.push in e&&null!=e[s.push]&&e[s.push].forEach((function(e){r.push(m(t,s,e))}))}))})),e.media.forEach((function(e){r.push(m("m",u.m[0],e)),i.forEach((function(t){u[t].forEach((function(s){s.name in e&&null!=e[s.name]?r.push(m(t,s,e)):s.push in e&&null!=e[s.push]&&e[s.push].forEach((function(e){r.push(m(t,s,e))}))}))}))})),r.join("\r\n")+"\r\n"},y=h.parse,v=h.parseParams,S=h.parseFmtpConfig,w=h.parsePayloads,k=h.parseRemoteCandidates,I=h.parseImageAttributes,x=h.parseSimulcastStreamList,P={write:b,parse:y,parseParams:v,parseFmtpConfig:S,parsePayloads:w,parseRemoteCandidates:k,parseImageAttributes:I,parseSimulcastStreamList:x};RegExp.prototype.test.bind(/^([a-z])=(.*)/),String.prototype.splitOnce=function(e){const[t,...s]=this.split(e);return s.length>0?[t,s.join(e)]:[this.toString()]};class C{constructor(){this.version=0,this.origin="- 10000 2 IN IP4 127.0.0.1",this.timing="0 0",this.name="-",this.iceLite=!0,this.msidSemantic=" WMS *",this.fingerprint=null,this.medias=[]}toString(){let e=[];null!=this.version&&e.push("v="+this.version),this.origin&&e.push("o=- 10000 2 IN IP4 127.0.0.1"),this.name&&e.push("s="+this.name),this.timing&&e.push("t="+this.timing),this.iceLite&&e.push("a=ice-lite"),this.msidSemantic&&e.push("a=msid-semantic:"+this.msidSemantic);let t=this.medias.filter(e=>e.available||"0"==e.mid).map(e=>e.mid).join(" ");e.push("a=group:BUNDLE "+t),this.fingerprint&&e.push(`a=fingerprint:${this.fingerprint.algorithm} ${this.fingerprint.hash}`);for(let t of this.medias)e.push(t.toSdp());let s=e.join("\r\n");return s+="\r\n",s}}class $ extends n{constructor(e,t,s,i){super(e,t,s,i),this.asyncQueue=new r,this.isGotDtls=!1,this.senders=Array(),this.usedMids=[],this.onsender=null,this.ondtls=null,this.onunpublished=null,this.pc=new RTCPeerConnection({iceServers:[],iceTransportPolicy:"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require",sdpSemantics:"unified-plan"},{optional:[{googDscp:!0}]})}publish(e,t,s,i){this.asyncQueue.push({execObj:this,taskFunc:this._publishInternal,parameters:[e,t,s,i]})}unpublish(e){let t=this.senders.find(t=>t.id==e);t&&this.asyncQueue.push({execObj:this,taskFunc:this._unpublishInternal,parameters:[t]})}getSender(e){return this.senders.find(t=>t.id===e)}async _unpublishInternal(e){this.pc.removeTrack(e.transceiver.sender);let t=await this.pc.createOffer();await this.pc.setLocalDescription(t);let s=y(t.sdp);this.usedMids=s.media.map(e=>e.mid);let i=this.generateSdp();await this.pc.setRemoteDescription(i),this.onunpublished&&this.onunpublished(e)}async _publishInternal(e,t,s,i){const r=[{maxBitrate:i}],n=await this.pc.addTransceiver(e,{direction:"sendonly",sendEncodings:r}),o=new a(e,n,s);this.senders.push(o);try{const e=await this.pc.createOffer();await this.pc.setLocalDescription(e),this.getLocalSdpData(o,e,t);let s=this.generateSdp();await this.pc.setRemoteDescription(s),this.onsender&&this.onsender(o)}catch(e){console.log(e)}}getLocalSdpData(e,s,i){let r=y(s.sdp),n=[];for(let t of r.media)n.push(t.mid),t.mid==e.mid&&(e.media=c.merge(t,i,this.remoteICEParameters,this.remoteICECandidates));if(this.usedMids=n,!1===this.isGotDtls){this.isGotDtls=!0;const e=t(r);e&&this.ondtls&&this.ondtls(e)}}generateSdp(){let e=new C;e.fingerprint={algorithm:this.remoteDTLSParameters.algorithm,hash:this.remoteDTLSParameters.value};for(let t of this.usedMids){let s=this.senders.find(e=>e.mid==String(t));s&&s.media&&e.medias.push(s.media)}let t=e.toString();return new RTCSessionDescription({type:"answer",sdp:t})}}function T(t){!function(e,t){if(!function(e){return"object"==typeof e}(e))throw TypeError(t+" must be object.")}(t,"metadata");for(const s in t)e(s,"The key of metadata"),e(t[s],"The value of metadata")}class R{constructor(e,t,s,i,r,n,a){this.mid=e,this.senderId=t,this.tokenId=s,this.id=i,this.codec=r,this.metadata=n,this.media=a,this.senderPaused=this.codec.senderPaused}get available(){return this.media.available}get kind(){return this.codec.kind}}class D extends n{constructor(e,t,s,i){super(e,t,s,i),this.receivers=[],this.asyncQueue=new r,this.isGotDtls=!1,this.currentMid=0,this.remoteSenders=new Map,this.pc=new RTCPeerConnection({iceServers:[],iceTransportPolicy:"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require",sdpSemantics:"unified-plan"})}unsubscribeByTokenId(e){for(let t of this.receivers)e===t.tokenId&&this.unsubscribeByReceiverId(t.id)}addReceiver(e,t,s,i,r){const n=String(this.currentMid++),a=c.create(n,i,this.remoteICEParameters,this.remoteICECandidates,s),o=new R(n,e,t,s,i,r,a);return this.receivers.push(o),o}subscribe(e){this.asyncQueue.push({execObj:this,taskFunc:this._subscribeInternal,parameters:[e]})}getReceiver(e){return this.receivers.find(t=>t.id===e)}getReceiverBySenderId(e){return this.receivers.find(t=>t.senderId===e)}async _subscribeInternal(e){e.media.direction="sendonly";let s=this.generateSdp();await this.pc.setRemoteDescription(s);let i=await this.pc.createAnswer();await this.pc.setLocalDescription(i);const r=await this.pc.getTransceivers().find(t=>t.mid===e.mid);if(e.transceiver=r,this.ontrack&&this.ontrack(r.receiver.track,e),!this.isGotDtls){this.isGotDtls=!0;let e=t(P.parse(i.sdp));this.ondtls&&this.ondtls(e)}}unsubscribeBySenderId(e){this.remoteSenders.delete(e);const t=this.receivers.find(t=>t.senderId===e);t&&t.available&&this.asyncQueue.push({execObj:this,taskFunc:this._unsubscribeInternal,parameters:[t]})}unsubscribeByReceiverId(e){const t=this.receivers.find(t=>t.id===e);t&&t.available&&this.asyncQueue.push({execObj:this,taskFunc:this._unsubscribeInternal,parameters:[t]})}async _unsubscribeInternal(e){e.media.direction="inactive";let t=this.generateSdp();await this.pc.setRemoteDescription(t);let s=await this.pc.createAnswer();await this.pc.setLocalDescription(s),this.onunsubscribed&&this.onunsubscribed(e)}init(){this.pc=new RTCPeerConnection}generateSdp(){let e=new C;e.fingerprint={algorithm:this.remoteDTLSParameters.algorithm,hash:this.remoteDTLSParameters.value};for(let t of this.receivers)e.medias.push(t.media);let t=e.toString();return new RTCSessionDescription({type:"offer",sdp:t})}}class N{constructor(e){this.track=e}get kind(){return this.track.kind}}var F;!function(e){e.New="new",e.Connecting="connecting",e.Connected="connected",e.Disconnected="disconnected"}(F||(F={}));class E{constructor(t,s,i,{metadata:r={}}={}){this.url=t,this.sessionId=s,this.tokenId=i,this.state=F.New,this.socket=null,this.supportedCodecs=null,this.onclose=null,this.onsender=null,this.onin=null,e(this.url,"url"),e(this.sessionId,"sessionId"),e(this.tokenId,"tokenId"),T(r),this.metadata=r}async connect({pub:e=!1,sub:t=!1,mediaId:s=""}={pub:!0,sub:!0,mediaId:""}){if(F.New===this.state){this.state=F.Connecting,this.socket=new i(this.url,{sessionId:this.sessionId,tokenId:this.tokenId,metadata:this.metadata}),this.socket.onclose=()=>{this.state=F.Disconnected,this.onclose&&this.onclose()},this.socket.onnotification=(e,t)=>{this.handleNotification(e,t)},await this.socket.init();const r=await this.socket.request({event:"join",data:{pub:e,sub:t,mediaId:s}}),{codecs:n,pub:a,sub:o}=r;e&&this.initTransport("pub",a),t&&this.initTransport("sub",o),this.supportedCodecs=n,this.state=F.Connected}}publish(e,{simulcast:t=!1,metadata:s={},maxBitrate:i,codec:r}={simulcast:!1,metadata:{}}){if(F.Connected===this.state){T(s),r||("audio"==e.kind?(r="opus",i=6e4):(r="VP8",i=15e4)),i||(i="audio"==e.kind?6e4:15e4);let t=this.supportedCodecs[r];t&&this.publisher&&this.publisher.publish(e.track,t,s,i)}}unpublish(t){e(t,"unpublish() senderId"),this.publisher&&this.publisher.unpublish(t)}async subscribe(e){if(this.subscriber){const t=this.subscriber.remoteSenders.get(e);if(t){const s=await this.request("subscribe",t),{codec:i,receiverId:r}=s;let n=this.subscriber.addReceiver(e,t.tokenId,r,i,t.metadata);this.subscriber.subscribe(n)}}}unsubscribe(t){e(t,"unsubscribe() senderId"),this.subscriber&&this.subscriber.unsubscribeBySenderId(t)}pause(t){e(t,"pause() id");let s="",i="",r="";if(this.subscriber){let e=this.subscriber.getReceiverBySenderId(t);e&&(s=this.subscriber.id,i="sub",r=e.senderId)}if(""==s&&this.publisher){let e=this.publisher.getSender(t);e&&(e.changeTrackState(!1),s=this.publisher.id,i="pub",r=e.id)}""!=s&&this.request("pause",{transportId:s,senderId:r,role:i})}resume(t){e(t,"resume() id");let s="",i="",r="";if(this.subscriber){let e=this.subscriber.getReceiverBySenderId(t);e&&(s=this.subscriber.id,i="sub",r=e.senderId)}if(""==s&&this.publisher){let e=this.publisher.getSender(t);e&&(e.changeTrackState(!0),s=this.publisher.id,i="pub",r=e.id)}""!=s&&this.request("resume",{transportId:s,senderId:r,role:i})}initTransport(e,t){const{id:s,iceCandidates:i,iceParameters:r,dtlsParameters:n}=t;"pub"===e?(this.publisher=new $(s,i,r,n),this.publisher.onunpublished=async e=>{this.request("unpublish",{transportId:this.publisher.id,senderId:e.id})},this.publisher.ondtls=async e=>{this.request("dtls",{transportId:this.publisher.id,role:"pub",dtlsParameters:e})},this.publisher.onsender=async e=>{const t=await this.socket.request({event:"publish",data:{transportId:this.publisher.id,codec:e.media.toCodec(),metadata:e.metadata}}),{senderId:s}=t;e.id=s,this.onsender&&this.onsender(e.id,this.tokenId,e.metadata)}):"sub"===e&&(this.subscriber=new D(s,i,r,n),this.subscriber.ondtls=async e=>{await this.socket.request({event:"dtls",data:{transportId:this.subscriber.id,role:"sub",dtlsParameters:e}})},this.subscriber.ontrack=(e,t)=>{this.onmedia&&this.onmedia(new N(e),t)},this.subscriber.onunsubscribed=e=>{this.onunsubscribed&&this.onunsubscribed(e),this.socket.request({event:"unsubscribe",data:{transportId:this.subscriber.id,senderId:e.senderId}})})}remoteSenderChanged(e,t){if(this.subscriber){let s=this.subscriber.getReceiverBySenderId(e);s&&(s.senderPaused=t,this.onchange&&this.onchange(s,t))}}handleNotification(e,t){switch(e){case"join":{let{tokenId:e,metadata:s}=t;this.onin&&this.onin(e,s);break}case"leave":{let{tokenId:e}=t;this.subscriber&&this.subscriber.unsubscribeByTokenId(e),this.onout&&this.onout(e);break}case"publish":{let e=t;this.subscriber&&(this.subscriber.remoteSenders.set(e.senderId,e),this.onsender&&this.onsender(e.senderId,e.tokenId,e.metadata));break}case"unpublish":{let{senderId:e,tokenId:s}=t;this.subscriber&&this.subscriber.unsubscribeBySenderId(e);break}case"pause":{let{senderId:e}=t;this.remoteSenderChanged(e,!0);break}case"resume":{let{senderId:e}=t;this.remoteSenderChanged(e,!1);break}default:console.log("unknown event ",e)}}async request(e,t){return this.socket?await this.socket.request({event:e,data:t}):null}}return class{static createSession(e,t,s,i){return new E(e,t,s,{metadata:i})}static async createVideoSource(e=320,t=240,s=15,i=!1,r){let n;n=i?{width:{exact:e},height:{exact:t},frameRate:{exact:s},deviceId:{exact:r}}:{width:{ideal:e},height:{ideal:t},frameRate:{ideal:s},deviceId:{ideal:r}};const a=await navigator.mediaDevices.getUserMedia({video:n}),[o]=a.getVideoTracks();return new N(o)}static async createAudioSource(){const e=await navigator.mediaDevices.getUserMedia({audio:!0}),[t]=e.getAudioTracks();return new N(t)}static async createScreenSharingSource(){const e=await navigator.mediaDevices.getDisplayMedia({video:!0}),[t]=e.getVideoTracks();return new N(t)}static createMediaSource(e){return new N(e)}}}));
